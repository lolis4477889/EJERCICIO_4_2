# -*- coding: utf-8 -*-
"""EJERCICIO1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1owz6qSgaLXJCz2wK0T7nZ4tPWrOm-xdW
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Definimos la función a integrar
def f(x):
    return x**2 + 3*x + 1

# Implementación de la regla del trapecio
def trapezoidal_rule(a, b, n):
    x = np.linspace(a, b, n+1)  # Puntos equidistantes
    y = f(x)
    h = (b - a) / n
    integral = (h / 2) * (y[0] + 2 * sum(y[1:n]) + y[n])  # Regla del trapecio compuesta
    return integral, x, y

# Parámetros de integración
a, b = 0, 2  # Intervalo de integración
n_values = [10, 20, 50]  # Número de subdivisiones

# Cálculo de la integral exacta
def exact_integral(a, b):
    return (1/3 * b**3 + 3/2 * b**2 + b) - (1/3 * a**3 + 3/2 * a**2 + a)

integral_exacta = exact_integral(a, b)

# Cálculo de la integral aproximada y análisis del error
table_data = []
print(f"Solución exacta de la integral: {integral_exacta:.6f}\n")
for n in n_values:
    integral_approx, x_vals, y_vals = trapezoidal_rule(a, b, n)
    error = abs(integral_exacta - integral_approx)
    table_data.append([n, integral_approx, error])
    print(f"Para n = {n}: Integral aproximada = {integral_approx:.6f}, Error = {error:.6f}")

# Crear una tabla con los resultados
df = pd.DataFrame(table_data, columns=["Subintervalos", "Integral Aproximada", "Error"])
print(df)

# Mostrar tabla con la solución exacta incluida
df_exact = pd.DataFrame([["Exacta", integral_exacta, 0]], columns=["Subintervalos", "Integral Aproximada", "Error"])
df = pd.concat([df_exact, df], ignore_index=True)
print(df)

# Gráfica de la función y la aproximación por trapecios
plt.figure(figsize=(10, 6))
x_fine = np.linspace(a, b, 100)
y_fine = f(x_fine)

for n in n_values:
    integral_approx, x_vals, y_vals = trapezoidal_rule(a, b, n)
    plt.plot(x_fine, y_fine, 'r-', linewidth=2, label=r'$f(x) = x^2+3x+1$' if n == n_values[0] else "")
    plt.fill_between(x_vals, y_vals, alpha=0.3, label=f"Aproximación Trapecios (n={n})")
    plt.plot(x_vals, y_vals, 'o-', label=f"Puntos de integración (n={n})")

# Etiquetas y leyenda
plt.axhline(y=integral_exacta/(b-a), color='g', linestyle='--', label="Solución exacta")
plt.xlabel("$x$")
plt.ylabel("$f(x)$")
plt.title("Aproximación de la integral con la regla del trapecio")
plt.legend()
plt.grid()

# Guardar y mostrar la figura
plt.savefig("trapecio_aproximacion.png")
plt.show()